/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package viajes;

import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.text.MessageFormat;
import javax.swing.JOptionPane;
/**
 *
 * @author USUARIO DELL
 */
public class Inicio extends javax.swing.JFrame {
    
    //Instancias de registros seleccionados
    Cliente ClienteActual = null;
    
    //Modales para los formularios
    AgregarCliente modalAgregarCliente = null;
    
    //Conexion con BD
    DefaultTableModel md;
    String data[][] = {};
    
    String url = "jdbc:postgresql://localhost:5432/Viajes";
    String usuario = "postgres";
    String contrasena = "postgres";
    
    
    private String CatalogoActual;
    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
        setLocationRelativeTo(null);
        CatalogoActual = "DASHBOARD";
        txtTitle.setText(CatalogoActual);
        setVisible(true);
        
        //Configuracion botones
        btnAgregar.setVisible(false);
        btnEditar.setVisible(false);
        btnEliminar.setVisible(false);
        jtTabla.setVisible(false);
    }
    
    
    public void GetAllData(String esquema, String tabla){
        try
        {
            Class.forName("org.postgresql.Driver");
            Connection conexion = DriverManager.getConnection(url,usuario,contrasena);
            java.sql.Statement sentencia = conexion.createStatement();

            Object[] params = new Object[]{esquema, tabla};
            String sql = MessageFormat.format("SELECT * FROM {0}.{1} WHERE Estatus = ''ACTIVO''", params);
            
            ResultSet result = sentencia.executeQuery(sql);
            DefaultTableModel model = (DefaultTableModel) jtTabla.getModel();
            model.setRowCount(0);
            
            //Asignacion de los ecabezados
            switch(CatalogoActual){
                case "CLIENTES":
                    //Se le asignan los encabezados a la tabla
                    md = new DefaultTableModel(data,Cliente.Header);
                    jtTabla.setModel(md);
                    break;
            }

            //Se itera sobre cada una de las tuplas para agregarlas a la tabla
            while(result.next())
            {
                String row[] = {};
                switch(CatalogoActual){
                    case "CLIENTES":
                        //Se obtiene el conjunto de datos para una tupla
                        row = Cliente.GetRow(result);
                        break;
                }
                md.addRow(row);
            }
            
            result.close();
            sentencia.close();
        }
        catch(Exception err){
            System.out.println("Error al obtener los datos\n" + err.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnDashboard = new javax.swing.JButton();
        btnClientes = new javax.swing.JButton();
        btnSucursales = new javax.swing.JButton();
        btnUnidades = new javax.swing.JButton();
        btnTransportistas = new javax.swing.JButton();
        btnRutas = new javax.swing.JButton();
        btnTarifas = new javax.swing.JButton();
        btnPedidos = new javax.swing.JButton();
        btnViajes = new javax.swing.JButton();
        btnHistorialViajes = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabla = new javax.swing.JTable();
        txtTitle = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Viajes");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 51, 51));

        jPanel3.setBackground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 93, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 44, Short.MAX_VALUE)
        );

        btnDashboard.setText("Dashboard");
        btnDashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDashboardActionPerformed(evt);
            }
        });

        btnClientes.setText("Clientes");
        btnClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClientesActionPerformed(evt);
            }
        });

        btnSucursales.setText("Sucursales");
        btnSucursales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSucursalesActionPerformed(evt);
            }
        });

        btnUnidades.setText("Unidades");
        btnUnidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnidadesActionPerformed(evt);
            }
        });

        btnTransportistas.setText("Transportistas");
        btnTransportistas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransportistasActionPerformed(evt);
            }
        });

        btnRutas.setText("Rutas");
        btnRutas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRutasActionPerformed(evt);
            }
        });

        btnTarifas.setText("Tarifas");
        btnTarifas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTarifasActionPerformed(evt);
            }
        });

        btnPedidos.setText("Pedidos");
        btnPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPedidosActionPerformed(evt);
            }
        });

        btnViajes.setText("Viajes");
        btnViajes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViajesActionPerformed(evt);
            }
        });

        btnHistorialViajes.setText("Historial Viajes");
        btnHistorialViajes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistorialViajesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(btnDashboard, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnClientes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnSucursales, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnUnidades, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnTransportistas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
            .addComponent(btnRutas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
            .addComponent(btnTarifas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
            .addComponent(btnPedidos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
            .addComponent(btnViajes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
            .addComponent(btnHistorialViajes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSucursales, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTransportistas, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRutas, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnViajes, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHistorialViajes, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 49, Short.MAX_VALUE)
        );

        jtTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtTablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtTabla);

        txtTitle.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        txtTitle.setText("Title");

        btnAgregar.setBackground(new java.awt.Color(51, 102, 255));
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(255, 0, 51));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditar.setBackground(new java.awt.Color(51, 255, 51));
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtTitle)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 19, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(txtTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClientesActionPerformed
        // TODO add your handling code here:
        CatalogoActual = "CLIENTES";
        txtTitle.setText(CatalogoActual);
        GetAllData("informacion","cliente");
        
        //Configuración de botones
        btnAgregar.setVisible(true);
        btnEditar.setVisible(true);
        btnEliminar.setVisible(true);
        jtTabla.setVisible(true);
    }//GEN-LAST:event_btnClientesActionPerformed

    private void btnSucursalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSucursalesActionPerformed
        // TODO add your handling code here:
        CatalogoActual = "SUCURSALES";
        txtTitle.setText(CatalogoActual);
        
        //Configuración de botones
        btnAgregar.setVisible(true);
        btnEditar.setVisible(true);
        btnEliminar.setVisible(true);
        jtTabla.setVisible(true);
    }//GEN-LAST:event_btnSucursalesActionPerformed

    private void btnUnidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnidadesActionPerformed
        // TODO add your handling code here:
        CatalogoActual = "UNIDADES";
        txtTitle.setText(CatalogoActual);
        
        //Configuración de botones
        btnAgregar.setVisible(true);
        btnEditar.setVisible(true);
        btnEliminar.setVisible(true);
        jtTabla.setVisible(true);
    }//GEN-LAST:event_btnUnidadesActionPerformed

    private void btnTransportistasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransportistasActionPerformed
        // TODO add your handling code here:
        CatalogoActual = "TRANSPORTISTAS";
        txtTitle.setText(CatalogoActual);
        
        //Configuración de botones
        btnAgregar.setVisible(true);
        btnEditar.setVisible(true);
        btnEliminar.setVisible(true);
        jtTabla.setVisible(true);
    }//GEN-LAST:event_btnTransportistasActionPerformed

    private void btnRutasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRutasActionPerformed
        // TODO add your handling code here:
        CatalogoActual = "RUTAS";
        txtTitle.setText(CatalogoActual);
        
        //Configuración de botones
        btnAgregar.setVisible(true);
        btnEditar.setVisible(true);
        btnEliminar.setVisible(true);
        jtTabla.setVisible(true);
    }//GEN-LAST:event_btnRutasActionPerformed

    private void btnTarifasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTarifasActionPerformed
        // TODO add your handling code here:
        CatalogoActual = "TARIFAS";
        txtTitle.setText(CatalogoActual);
        
        //Configuración de botones
        btnAgregar.setVisible(true);
        btnEditar.setVisible(false);
        btnEliminar.setVisible(true);
        jtTabla.setVisible(true);
    }//GEN-LAST:event_btnTarifasActionPerformed

    private void btnPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPedidosActionPerformed
        // TODO add your handling code here:
        CatalogoActual = "PEDIDOS";
        txtTitle.setText(CatalogoActual);
        
        //Configuración de botones
        btnAgregar.setVisible(true);
        btnEditar.setVisible(false);
        btnEliminar.setVisible(true);
        jtTabla.setVisible(true);
    }//GEN-LAST:event_btnPedidosActionPerformed

    private void btnViajesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViajesActionPerformed
        // TODO add your handling code here:
        CatalogoActual = "VIAJES";
        txtTitle.setText(CatalogoActual);
        
        //Configuración de botones
        btnAgregar.setVisible(true);
        btnEditar.setVisible(false);
        btnEliminar.setVisible(true);
        jtTabla.setVisible(true);
    }//GEN-LAST:event_btnViajesActionPerformed

    private void btnHistorialViajesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistorialViajesActionPerformed
        // TODO add your handling code here:
        CatalogoActual = "HISTORIAL_VIAJES";
        txtTitle.setText(CatalogoActual);
        
        //Configuración de botones
        btnAgregar.setVisible(false);
        btnEditar.setVisible(false);
        btnEliminar.setVisible(false);
        jtTabla.setVisible(true);
    }//GEN-LAST:event_btnHistorialViajesActionPerformed

    private void btnDashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDashboardActionPerformed
        // TODO add your handling code here:
        CatalogoActual = "DASHBOARD";
        txtTitle.setText(CatalogoActual);
        
        //Configuración de botones
        btnAgregar.setVisible(false);
        btnEditar.setVisible(false);
        btnEliminar.setVisible(false);
        jtTabla.setVisible(false);
    }//GEN-LAST:event_btnDashboardActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        switch(CatalogoActual){
            case "CLIENTES":
                modalAgregarCliente = new AgregarCliente(this);
                break;
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        switch(CatalogoActual){
            case "CLIENTES":
                if(ClienteActual != null){
                    modalAgregarCliente = new AgregarCliente(this);
                    modalAgregarCliente.setVisible(ClienteActual,"ELIMINAR");
                } 
                break;
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        switch(CatalogoActual){
            case "CLIENTES":
                if(ClienteActual != null){
                    modalAgregarCliente = new AgregarCliente(this);
                    modalAgregarCliente.setVisible(ClienteActual,"EDITAR");
                } 
                break;
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    //SELECCIONA UN REGISTRO
    private void jtTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTablaMouseClicked
        // TODO add your handling code here:
        
        int row = jtTabla.getSelectedRow();
        int col = jtTabla.getSelectedColumn();
        
        DefaultTableModel model = (DefaultTableModel) jtTabla.getModel();
        int IdRegistro = Integer.parseInt(model.getValueAt(row, 0).toString());
        
        switch(CatalogoActual){
            case "DASHBOARD":
                break;
            case "CLIENTES":
                ClienteActual = GetCliente(IdRegistro);
                break;
        }
    }//GEN-LAST:event_jtTablaMouseClicked

    
    //CLIENTES
    public void GuardaCliente(Cliente cliente)
    {
        
        try
        {
            Class.forName("org.postgresql.Driver");
            Connection conexion = DriverManager.getConnection(url,usuario,contrasena);
            java.sql.Statement sentencia = conexion.createStatement();
            Object[] params = new Object[]{cliente.RazonSocial, cliente.NombreComercial,cliente.Tipo,cliente.Direccion,cliente.PorcentajeVenta,cliente.Estatus};
            String sql = 
                    MessageFormat.format("INSERT INTO informacion.cliente(razonsocial,nombrecomercial,tipo,direccion,porcentajeventa,estatus) VALUES(''{0}'',''{1}'',''{2}'',''{3}'',{4},''{5}'')", params);
            
            sentencia.execute(sql);
            //Imprime los resultados de la tabla
            GetAllData("informacion","cliente");
            modalAgregarCliente.dispose();
            conexion.close();
        }
        catch(Exception error){
            JOptionPane.showMessageDialog(null, error.getMessage(), "Error al guardar el registro: ", JOptionPane.ERROR_MESSAGE);
        }
            
    }
    public void EditaCliente(Cliente cliente){
        try
        {
            Class.forName("org.postgresql.Driver");
            Connection conexion = DriverManager.getConnection(url,usuario,contrasena);
            java.sql.Statement sentencia = conexion.createStatement();

            Object[] params = new Object[]{ClienteActual.IdCliente,cliente.RazonSocial, cliente.NombreComercial,cliente.Tipo,cliente.Direccion,cliente.PorcentajeVenta};
            String sql = 
                    MessageFormat.format("UPDATE informacion.cliente SET razonsocial = ''{1}'',nombrecomercial = ''{2}'',tipo = ''{3}'',direccion = ''{4}'',porcentajeventa = {5} WHERE IdCliente = {0}", params);
            
            sentencia.execute(sql);
            //Imprime los resultados de la tabla
            GetAllData("informacion","cliente");
            modalAgregarCliente.dispose();
            conexion.close();
        }
        catch(Exception error){
            JOptionPane.showMessageDialog(null, error.getMessage(), "Error al editar el registro: ", JOptionPane.ERROR_MESSAGE);
        }
    }
    public void EliminaCliente(Cliente cliente){
        try
        {
            Class.forName("org.postgresql.Driver");
            Connection conexion = DriverManager.getConnection(url,usuario,contrasena);
            java.sql.Statement sentencia = conexion.createStatement();

            Object[] params = new Object[]{ClienteActual.IdCliente};
            String sql = 
                    MessageFormat.format("UPDATE informacion.cliente SET estatus = ''CANCELADO'' WHERE IdCliente = {0}", params);
            
            sentencia.execute(sql);
            //Imprime los resultados de la tabla
            GetAllData("informacion","cliente");
            modalAgregarCliente.dispose();
            conexion.close();
        }
        catch(Exception error){
            JOptionPane.showMessageDialog(null, error.getMessage(), "Error al editar el registro: ", JOptionPane.ERROR_MESSAGE);
        }
    }
    public Cliente GetCliente(int idregistro){
        
        Cliente cliente = null;
        try{
            Class.forName("org.postgresql.Driver");
            Connection conexion = DriverManager.getConnection(url,usuario,contrasena);
            java.sql.Statement sentencia = conexion.createStatement();

            Object[] params = new Object[]{"informacion", "cliente",idregistro};
            String sql = MessageFormat.format("SELECT * FROM {0}.{1} WHERE IdCliente = {2}", params);
            
            ResultSet result = sentencia.executeQuery(sql);
            
            //Se itera sobre la tupla encontrada si es que existe
            while(result.next())
            {
                cliente = Cliente.GetCliente(result);
            }
            
            result.close();
            sentencia.close();
            
        }
        catch(Exception error){
            
        }
        
        return cliente;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnClientes;
    private javax.swing.JButton btnDashboard;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnHistorialViajes;
    private javax.swing.JButton btnPedidos;
    private javax.swing.JButton btnRutas;
    private javax.swing.JButton btnSucursales;
    private javax.swing.JButton btnTarifas;
    private javax.swing.JButton btnTransportistas;
    private javax.swing.JButton btnUnidades;
    private javax.swing.JButton btnViajes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtTabla;
    private javax.swing.JLabel txtTitle;
    // End of variables declaration//GEN-END:variables
}
